name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write  # Required for uploading SARIF results

jobs:
  # Backend tests
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          backend/.venv
        key: uv-${{ runner.os }}-${{ hashFiles('backend/uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-

    - name: Install dependencies
      run: |
        uv sync --group dev

    - name: Lint with ruff
      run: |
        uv run ruff check .
        uv run ruff format --check .

    - name: Type check with mypy
      run: |
        uv run mypy .

    - name: Test with pytest
      run: |
        uv run pytest --cov=. --cov-report=xml || echo "No tests found, skipping coverage"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend

  # Frontend tests
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: ["20", "22"]

    steps:
    - uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: ./frontend/pnpm-lock.yaml

    - name: Cache Next.js
      uses: actions/cache@v4
      with:
        path: |
          frontend/.next/cache
        key: nextjs-${{ runner.os }}-${{ hashFiles('frontend/pnpm-lock.yaml') }}-${{ hashFiles('frontend/next.config.ts') }}
        restore-keys: |
          nextjs-${{ runner.os }}-${{ hashFiles('frontend/pnpm-lock.yaml') }}-
          nextjs-${{ runner.os }}-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Lint with ESLint
      run: pnpm run lint

    - name: Type check
      run: pnpm run type-check

    - name: Run tests
      run: pnpm run test

    - name: Build
      run: pnpm run build
      env:
        NEXT_TELEMETRY_DISABLED: 1
        CI: true

  # Docker build test (TODO: enable when docker-compose.yml is ready)
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #
  #   - name: Build Docker images
  #     run: |
  #       docker-compose build --no-cache
  #
  #   - name: Test Docker services
  #     run: |
  #       docker-compose up -d
  #       sleep 30
  #       curl -f http://localhost:8080/health || exit 1
  #       curl -f http://localhost:3001 || exit 1
  #       docker-compose down

  # Security scanning
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
